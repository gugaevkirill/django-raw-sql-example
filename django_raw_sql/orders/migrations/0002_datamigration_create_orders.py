# Generated by Django 3.1.7 on 2021-03-01 13:36
from decimal import Decimal

from django.db import migrations
from django.db.backends.postgresql.schema import DatabaseSchemaEditor
from django.db.migrations.state import StateApps


def action(apps: StateApps, schema_editor: DatabaseSchemaEditor) -> None:
    db_alias = schema_editor.connection.alias

    Email = apps.get_model('orders.Email')
    Customer = apps.get_model('orders.Customer')
    OrderStatus = apps.get_model('orders.OrderStatus')
    CustomProduct = apps.get_model('orders.CustomProduct')
    NonCustomProduct = apps.get_model('orders.NonCustomProduct')
    Order = apps.get_model('orders.Order')
    OrderItem = apps.get_model('orders.OrderItem')

    # Customers
    customers = []
    for i in range(3):
        email = Email.objects.using(db_alias).create(
            email_address=f'test_user_{i}@example.com'
        )
        customer = Customer.objects.using(db_alias).create(
            first_name='John',
            last_name=f'Smith {i}',
            email=email,
        )
        customers.append(customer)

    # Statuses
    status_paid = OrderStatus.objects.using(db_alias).create(
        paid=True
    )
    status_unpaid = OrderStatus.objects.using(db_alias).create(
        paid=False
    )
    statuses = [status_paid, status_unpaid]

    # Products
    cp = CustomProduct.objects.using(db_alias).create(
        product_name='CustomProduct',
        price=Decimal('155.42'),
    )
    ncp = NonCustomProduct.objects.using(db_alias).create(
        product_name='NonCustomProduct',
        price=Decimal('3155.42'),
    )

    # Orders
    for i, customer in enumerate(customers):
        for j, status in enumerate(statuses):
            order = Order.objects.using(db_alias).create(
                order_number=i * 10 + j,
                customer=customer,
                status=status,
            )
            OrderItem.objects.using(db_alias).create(
                order=order,
                product=cp,
            )
            OrderItem.objects.using(db_alias).create(
                order=order,
                p=ncp,
            )


class Migration(migrations.Migration):

    dependencies = [
        ('orders', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(action, lambda a, s: None),
    ]
